[
  {
    "desc": "Display pop-up with Homebrew Formula info, or open their URL",
    "name": "BrewInfo",
    "type": "Module"
  },
  {
    "desc": "An integer specifying how long the alerts generated by BrewInfo will stay onscreen",
    "module": "BrewInfo",
    "name": "brew_info_delay_sec",
    "type": "Variable"
  },
  {
    "desc": "A table in conformance with the [hs.alert.defaultStyle](http://www.hammerspoon.org/docs/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`",
    "module": "BrewInfo",
    "name": "brew_info_style",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for BrewInfo",
    "module": "BrewInfo",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Opens the homepage for Formula `pkg`",
    "module": "BrewInfo",
    "name": "openBrewURL",
    "type": "Method"
  },
  {
    "desc": "Display `brew info` using the selected text as the package name",
    "module": "BrewInfo",
    "name": "openBrewURLCurSel",
    "type": "Method"
  },
  {
    "desc": "Displays an alert with the output of `brew info <pkg>`",
    "module": "BrewInfo",
    "name": "showBrewInfo",
    "type": "Method"
  },
  {
    "desc": "Display `brew info` using the selected text as the package name",
    "module": "BrewInfo",
    "name": "showBrewInfoCurSel",
    "type": "Method"
  },
  {
    "desc": "Prevent the screen from going to sleep",
    "name": "Caffeine",
    "type": "Module"
  },
  {
    "desc": "Binds hotkeys for Caffeine",
    "module": "Caffeine",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Starts Caffeine",
    "module": "Caffeine",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Stops Caffeine",
    "module": "Caffeine",
    "name": "stop",
    "type": "Method"
  },
  {
    "desc": "Show a color sample/picker",
    "name": "ColorPicker",
    "type": "Module"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "ColorPicker",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "Title to show in the menubar if `show_in_menubar` is true. Defaults to `\"\\u{1F308}\"`, which is the [Rainbow Emoji](http://emojipedia.org/rainbow/)",
    "module": "ColorPicker",
    "name": "menubar_title",
    "type": "Variable"
  },
  {
    "desc": "If `true`, show an icon in the menubar to trigger the color picker",
    "module": "ColorPicker",
    "name": "show_in_menubar",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for ColorPicker",
    "module": "ColorPicker",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Toggle display on the screen of a grid with all the colors in the given colortable",
    "module": "ColorPicker",
    "name": "toggleColorSamples",
    "type": "Method"
  },
  {
    "desc": "Let users choose emojis by name/keyword",
    "name": "Emojis",
    "type": "Module"
  },
  {
    "desc": "Binds hotkeys for Emojis",
    "module": "Emojis",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Show a fading-and-zooming image in the center of the screen",
    "name": "FadeLogo",
    "type": "Module"
  },
  {
    "desc": "Number of seconds over which to fade in the image. Defaults to 0.3.",
    "module": "FadeLogo",
    "name": "fade_in_time",
    "type": "Variable"
  },
  {
    "desc": "Number of seconds over which to fade out the image. Defaults to 0.5.",
    "module": "FadeLogo",
    "name": "fade_out_time",
    "type": "Variable"
  },
  {
    "desc": "Image to display. Must be an `hs.image` object. Defaults to `hs.image.imageFromName(hs.image.systemImageNames.ApplicationIcon)` (the Hammerspoon app icon)",
    "module": "FadeLogo",
    "name": "image",
    "type": "Variable"
  },
  {
    "desc": "Initial transparency of the image. Defaults to 1.0.",
    "module": "FadeLogo",
    "name": "image_alpha",
    "type": "Variable"
  },
  {
    "desc": "`hs.geometry` object specifying the initial size of the image to display in the center of the screen. The image object will be resizes proportionally to fit in this size. Defaults to `hs.geometry.size(w=200, h=200)`",
    "module": "FadeLogo",
    "name": "image_size",
    "type": "Variable"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "FadeLogo",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "Number of seconds to leave the image on the screen when `start()` is called.",
    "module": "FadeLogo",
    "name": "run_time",
    "type": "Variable"
  },
  {
    "desc": "Do zoom-and-fade if `true`, otherwise do a regular fade",
    "module": "FadeLogo",
    "name": "zoom",
    "type": "Variable"
  },
  {
    "desc": "Factor by which to scale the image at every iteration during the zoom-and-fade. Defaults to 1.1.",
    "module": "FadeLogo",
    "name": "zoom_scale_factor",
    "type": "Variable"
  },
  {
    "desc": "Seconds between the zooming iterations",
    "module": "FadeLogo",
    "name": "zoom_scale_timer",
    "type": "Variable"
  },
  {
    "desc": "Hide and delete the canvas",
    "module": "FadeLogo",
    "name": "delete",
    "type": "Method"
  },
  {
    "desc": "Hide the image without zoom, fading it out over `fade_out_time` seconds",
    "module": "FadeLogo",
    "name": "hide",
    "type": "Method"
  },
  {
    "desc": "Display the image, fading it in over `fade_in_time` seconds",
    "module": "FadeLogo",
    "name": "show",
    "type": "Method"
  },
  {
    "desc": "Show the image, wait `run_time` seconds, and then zoom-and-fade it out.",
    "module": "FadeLogo",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Zoom-and-fade the image over `fade_out_time` seconds",
    "module": "FadeLogo",
    "name": "zoom_and_fade",
    "type": "Method"
  },
  {
    "desc": "Color the menubar according to the current keyboard layout",
    "name": "MenubarFlag",
    "type": "Module"
  },
  {
    "desc": "Boolean to specify whether the indicators should be shown on all monitors or just the current one. Defaults to `true`",
    "module": "MenubarFlag",
    "name": "allScreens",
    "type": "Variable"
  },
  {
    "desc": "Table that contains the configuration of indicator colors",
    "module": "MenubarFlag",
    "name": "colors",
    "type": "Variable"
  },
  {
    "desc": "Number to specify the indicator transparency (0.0 - invisible; 1.0 - fully opaque). Defaults to 0.3",
    "module": "MenubarFlag",
    "name": "indicatorAlpha",
    "type": "Variable"
  },
  {
    "desc": "Number to specify the height of the indicator. Specify 0.0-1.0 to specify a percentage of the height of the menu bar, larger values indicate a fixed height in pixels. Defaults to 1.0",
    "module": "MenubarFlag",
    "name": "indicatorHeight",
    "type": "Variable"
  },
  {
    "desc": "Boolean to specify whether the indicator should be shown in all spaces (this includes full-screen mode). Defaults to `true`",
    "module": "MenubarFlag",
    "name": "indicatorInAllSpaces",
    "type": "Variable"
  },
  {
    "desc": "Draw the indicators corresponding to the given layout name",
    "module": "MenubarFlag",
    "name": "drawIndicators",
    "type": "Method"
  },
  {
    "desc": "Draw indicators for the current keyboard layout",
    "module": "MenubarFlag",
    "name": "getLayoutAndDrawindicators",
    "type": "Method"
  },
  {
    "desc": "Start the keyboard layout watcher to draw the menubar indicators.",
    "module": "MenubarFlag",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Remove indicators and stop the keyboard layout watcher",
    "module": "MenubarFlag",
    "name": "stop",
    "type": "Method"
  },
  {
    "desc": "Draws a circle around the mouse pointer when a hotkey is pressed",
    "name": "MouseCircle",
    "type": "Module"
  },
  {
    "desc": "An `hs.drawing.color` table defining the colour of the circle. Defaults to red.",
    "module": "MouseCircle",
    "name": "color",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for MouseCircle",
    "module": "MouseCircle",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Draws a circle around the mouse",
    "module": "MouseCircle",
    "name": "show",
    "type": "Method"
  },
  {
    "desc": "Give your screens rounded corners",
    "name": "RoundedCorners",
    "type": "Module"
  },
  {
    "desc": "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true",
    "module": "RoundedCorners",
    "name": "allScreens",
    "type": "Variable"
  },
  {
    "desc": "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`",
    "module": "RoundedCorners",
    "name": "level",
    "type": "Variable"
  },
  {
    "desc": "Controls the radius of the rounded corners, in points. Defaults to 6",
    "module": "RoundedCorners",
    "name": "radius",
    "type": "Variable"
  },
  {
    "desc": "Starts RoundedCorners",
    "module": "RoundedCorners",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Stops RoundedCorners",
    "module": "RoundedCorners",
    "name": "stop",
    "type": "Method"
  },
  {
    "desc": "Pluggable launch bar",
    "name": "Seal",
    "type": "Module"
  },
  {
    "desc": "Binds hotkeys for Seal",
    "module": "Seal",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Loads a list of Seal plugins",
    "module": "Seal",
    "name": "loadPlugins",
    "type": "Method"
  },
  {
    "desc": "Shows the Seal UI",
    "module": "Seal",
    "name": "show",
    "type": "Method"
  },
  {
    "desc": "Starts Seal",
    "module": "Seal",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Stops Seal",
    "module": "Seal",
    "name": "stop",
    "type": "Method"
  },
  {
    "desc": "Handles \"send current item to OmniFocus\" for multiple applications",
    "name": "SendToOmniFocus",
    "type": "Module"
  },
  {
    "desc": "Table containing application handlers for sending the current item to OmniFocus.",
    "module": "SendToOmniFocus",
    "name": "actions",
    "type": "Variable"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "SendToOmniFocus",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "Boolean to control Hammerspoon-generated notifications when filing items (doest not control AppleScript notifications, if any, generated from within the scripts). Defaults to `true`.",
    "module": "SendToOmniFocus",
    "name": "notifications",
    "type": "Variable"
  },
  {
    "desc": "Whether to display the new tasks in the OmniFocus quick-entry dialog before adding them. Defaults to `true` (set to `false` to send directly to the Inbox, without prompting)",
    "module": "SendToOmniFocus",
    "name": "quickentrydialog",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for SendToOmniFocus",
    "module": "SendToOmniFocus",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Register a new application handler",
    "module": "SendToOmniFocus",
    "name": "registerApplication",
    "type": "Method"
  },
  {
    "desc": "Send current item in current application to OmniFocus by triggering the appropriate handler.",
    "module": "SendToOmniFocus",
    "name": "sendCurrentItem",
    "type": "Method"
  },
  {
    "desc": "Keep a history of the clipboard, only for text entries",
    "name": "TextClipboardHistory",
    "type": "Module"
  },
  {
    "desc": "Whether to remove duplicates from the list, keeping only the latest one. Defaults to `true`.",
    "module": "TextClipboardHistory",
    "name": "deduplicate",
    "type": "Variable"
  },
  {
    "desc": "Speed in seconds to check for clipboard changes. If you check too frequently, you will degrade performance, if you check sparsely you will loose copies. Defaults to 0.8.",
    "module": "TextClipboardHistory",
    "name": "frequency",
    "type": "Variable"
  },
  {
    "desc": "How many items to keep on history. Defaults to 100",
    "module": "TextClipboardHistory",
    "name": "hist_size",
    "type": "Variable"
  },
  {
    "desc": "If `true`, check the data identifiers set in the pasteboard and ignore entries which match those listed in `TextClipboardHistory.ignoredIdentifiers`. The list of identifiers comes from http://nspasteboard.org. Defaults to `true`",
    "module": "TextClipboardHistory",
    "name": "honor_ignoredidentifiers",
    "type": "Variable"
  },
  {
    "desc": "Types of clipboard entries to ignore, see http://nspasteboard.org. Code from https://github.com/asmagill/hammerspoon-config/blob/master/utils/_menus/newClipper.lua. Default value (don't modify unless you know what you are doing):",
    "module": "TextClipboardHistory",
    "name": "ignoredIdentifiers",
    "type": "Variable"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "TextClipboardHistory",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "String to show in the menubar if `TextClipboardHistory.show_in_menubar` is `true`. Defaults to `\"\\u{1f4ce}\"`, which is the [Unicode paperclip character](https://codepoints.net/U+1F4CE)",
    "module": "TextClipboardHistory",
    "name": "menubar_title",
    "type": "Variable"
  },
  {
    "desc": "Whether to auto-type the item when selecting it from the menu. Can be toggled on the fly from the chooser. Defaults to `false`.",
    "module": "TextClipboardHistory",
    "name": "paste_on_select",
    "type": "Variable"
  },
  {
    "desc": "Whether to show a menubar item to open the clipboard history. Defaults to `true`",
    "module": "TextClipboardHistory",
    "name": "show_in_menubar",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for TextClipboardHistory",
    "module": "TextClipboardHistory",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "If the pasteboard has changed, we add the current item to our history and update the counter",
    "module": "TextClipboardHistory",
    "name": "checkAndStorePasteboard",
    "type": "Method"
  },
  {
    "desc": "Clears the clipboard and history",
    "module": "TextClipboardHistory",
    "name": "clearAll",
    "type": "Method"
  },
  {
    "desc": "Clears the last added to the history",
    "module": "TextClipboardHistory",
    "name": "clearLastItem",
    "type": "Method"
  },
  {
    "desc": "Add the given string to the history",
    "module": "TextClipboardHistory",
    "name": "pasteboardToClipboard",
    "type": "Method"
  },
  {
    "desc": "Verify whether the pasteboard contents matches one of the values in `TextClipboardHistory.ignoredIdentifiers`",
    "module": "TextClipboardHistory",
    "name": "shouldBeStored",
    "type": "Method"
  },
  {
    "desc": "Display the current clipboard list in a chooser",
    "module": "TextClipboardHistory",
    "name": "showClipboard",
    "type": "Method"
  },
  {
    "desc": "Start the clipboard history collector",
    "module": "TextClipboardHistory",
    "name": "start",
    "type": "Method"
  },
  {
    "desc": "Show/hide the clipboard list, depending on its current state",
    "module": "TextClipboardHistory",
    "name": "toggleClipboard",
    "type": "Method"
  },
  {
    "desc": "Toggle the value of `TextClipboardHistory.paste_on_select`",
    "module": "TextClipboardHistory",
    "name": "togglePasteOnSelect",
    "type": "Method"
  },
  {
    "desc": "Toggle rotation on external screens",
    "name": "ToggleScreenRotation",
    "type": "Module"
  },
  {
    "desc": "Two-element table containing the rotation angles for \"normal\" and \"rotated\". Defaults to `{ 0, 90 }` and should only be changed if you really know what you are doing.",
    "module": "ToggleScreenRotation",
    "name": "rotating_angles",
    "type": "Variable"
  },
  {
    "desc": "Lua patterns for screens that shouldn't be rotated, even if they match one of the patterns.",
    "module": "ToggleScreenRotation",
    "name": "screens_to_skip",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for ToggleScreenRotation.",
    "module": "ToggleScreenRotation",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Provide keybindings for muting/unmuting Skype or Skype for Business",
    "name": "ToggleSkypeMute",
    "type": "Module"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "ToggleSkypeMute",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "If `true`, produce notifications when Skype is muted/unmuted. Defaults to `true`.",
    "module": "ToggleSkypeMute",
    "name": "notifications",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for ToggleSkypeMute",
    "module": "ToggleSkypeMute",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Toggle Skype between muted/unmuted, whether it is focused or not",
    "module": "ToggleSkypeMute",
    "name": "toggle",
    "type": "Method"
  },
  {
    "desc": "Handle \"archive current item\" for multiple applications using the same hotkey",
    "name": "UniversalArchive",
    "type": "Module"
  },
  {
    "desc": "Boolean indicating whether a notification should be produced when an item is archived. Defaults to \"true\".",
    "module": "UniversalArchive",
    "name": "archive_notifications",
    "type": "Variable"
  },
  {
    "desc": "Name of the Notebook to use for archiving in Evernote. Defaults to \"Archive\"",
    "module": "UniversalArchive",
    "name": "evernote_archive_notebook",
    "type": "Variable"
  },
  {
    "desc": "In Evernote, archive is done by selectin \"Move note\" and then",
    "module": "UniversalArchive",
    "name": "evernote_delay_before_typing",
    "type": "Variable"
  },
  {
    "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
    "module": "UniversalArchive",
    "name": "logger",
    "type": "Variable"
  },
  {
    "desc": "Name of the mailbox to use for archiving in Outlook. You must move a message manually to that mailbox at least once so that it appears in the \"Message\" -> \"Move...\" submenu. Defaults to \"Archive\"",
    "module": "UniversalArchive",
    "name": "outlook_archive_folder",
    "type": "Variable"
  },
  {
    "desc": "Binds hotkeys for UniversalArchive",
    "module": "UniversalArchive",
    "name": "bindHotkeys",
    "type": "Method"
  },
  {
    "desc": "Archive current note in Evernote.",
    "module": "UniversalArchive",
    "name": "evernoteArchive",
    "type": "Method"
  },
  {
    "desc": "Archive current message in Mail using the built-in Archive functionality",
    "module": "UniversalArchive",
    "name": "mailArchive",
    "type": "Method"
  },
  {
    "desc": "Archive current message in Outlook to the folder specified in",
    "module": "UniversalArchive",
    "name": "outlookArchive",
    "type": "Method"
  },
  {
    "desc": "Register a handler function for an application.",
    "module": "UniversalArchive",
    "name": "registerApplication",
    "type": "Method"
  },
  {
    "desc": "Archive current message in Spark using the built-in Archive functionality",
    "module": "UniversalArchive",
    "name": "sparkArchive",
    "type": "Method"
  },
  {
    "desc": "Main entry point for archiving an item. If a handler function is",
    "module": "UniversalArchive",
    "name": "universalArchive",
    "type": "Method"
  },
  {
    "desc": "Route URLs to different applications with pattern matching",
    "name": "URLDispatcher",
    "type": "Module"
  },
  {
    "desc": "If true, handle Slack-redir URLs to apply the rule on the destination URL. Defaults to `true`",
    "module": "URLDispatcher",
    "name": "decode_slack_redir_urls",
    "type": "Variable"
  },
  {
    "desc": "Bundle ID for default URL handler. (Defaults to `\"com.apple.Safari\"`)",
    "module": "URLDispatcher",
    "name": "default_handler",
    "type": "Variable"
  },
  {
    "desc": "URL dispatch rules.",
    "module": "URLDispatcher",
    "name": "url_patterns",
    "type": "Variable"
  },
  {
    "desc": "Dispatch a URL to an application according to the defined `url_patterns`.",
    "module": "URLDispatcher",
    "name": "dispatchURL",
    "type": "Method"
  },
  {
    "desc": "Start dispatching URLs according to the rules",
    "module": "URLDispatcher",
    "name": "start",
    "type": "Method"
  }
]
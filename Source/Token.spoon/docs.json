[
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "Token:bindHotkeys(mapping)",
        "desc": "Binds hotkeys for Token",
        "doc": "Binds hotkeys for Token\n\nParameters:\n * mapping - A table containing hotkey modifier/key details for the following items:\n  * generate - generate and type token",
        "name": "bindHotkeys",
        "parameters": [
          " * mapping - A table containing hotkey modifier/key details for the following items:",
          "  * generate - generate and type token"
        ],
        "signature": "Token:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Token:get_token()",
        "desc": "Retrieves the token using an HOTP/TOTP Secret Key stored in the keychain",
        "doc": "Retrieves the token using an HOTP/TOTP Secret Key stored in the keychain",
        "name": "get_token",
        "signature": "Token:get_token()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Token:token_keystroke()",
        "desc": "read a token secret key from keychain, generate a code and make keystrokes for it",
        "doc": "read a token secret key from keychain, generate a code and make keystrokes for it",
        "name": "token_keystroke",
        "signature": "Token:token_keystroke()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "Variable": [
      {
        "def": "Token.logger",
        "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "doc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "name": "logger",
        "signature": "Token.logger",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Token.secret_key",
        "desc": "String indicating the Keychain name of the Shared Key used in the OTP HMAC-SHA1 generation",
        "doc": "String indicating the Keychain name of the Shared Key used in the OTP HMAC-SHA1 generation",
        "name": "secret_key",
        "signature": "Token.secret_key",
        "stripped_doc": "",
        "type": "Variable"
      }
    ],
    "desc": "generate google authenticator token value keystrokes",
    "doc": "generate google authenticator token value keystrokes\nRetrieve a google authenticator token seed from keychain and use this to calculate the current value\nSimulate keystrokes for this token value\n\nwritten by Teun Vink <github@teun.tv>, converted to spoon by Tyler Thrailkill <snowe>\n\nhttps://github.com/teunvink/hammerspoon",
    "items": [
      {
        "def": "Token:bindHotkeys(mapping)",
        "desc": "Binds hotkeys for Token",
        "doc": "Binds hotkeys for Token\n\nParameters:\n * mapping - A table containing hotkey modifier/key details for the following items:\n  * generate - generate and type token",
        "name": "bindHotkeys",
        "parameters": [
          " * mapping - A table containing hotkey modifier/key details for the following items:",
          "  * generate - generate and type token"
        ],
        "signature": "Token:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Token:get_token()",
        "desc": "Retrieves the token using an HOTP/TOTP Secret Key stored in the keychain",
        "doc": "Retrieves the token using an HOTP/TOTP Secret Key stored in the keychain",
        "name": "get_token",
        "signature": "Token:get_token()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Token.logger",
        "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "doc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "name": "logger",
        "signature": "Token.logger",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Token.secret_key",
        "desc": "String indicating the Keychain name of the Shared Key used in the OTP HMAC-SHA1 generation",
        "doc": "String indicating the Keychain name of the Shared Key used in the OTP HMAC-SHA1 generation",
        "name": "secret_key",
        "signature": "Token.secret_key",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Token:token_keystroke()",
        "desc": "read a token secret key from keychain, generate a code and make keystrokes for it",
        "doc": "read a token secret key from keychain, generate a code and make keystrokes for it",
        "name": "token_keystroke",
        "signature": "Token:token_keystroke()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "name": "Token",
    "stripped_doc": "Retrieve a google authenticator token seed from keychain and use this to calculate the current value\nSimulate keystrokes for this token value\n\nwritten by Teun Vink <github@teun.tv>, converted to spoon by Tyler Thrailkill <snowe>\n\nhttps://github.com/teunvink/hammerspoon",
    "submodules": [],
    "type": "Module"
  }
]
[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "def" : "WindowHalfsAndThirds.defaultHotkeys",
        "stripped_doc" : [
          "Table containing a sample set of hotkeys that can be",
          "assigned to the different operations. These are not bound",
          "by default - if you want to use them you have to call:",
          "`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`",
          "after loading the spoon. Value:",
          "```",
          " {",
          "    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },",
          "    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },",
          "    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },",
          "    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },",
          "    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },",
          "    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },",
          "    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },",
          "    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },",
          "    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },",
          "    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },",
          " }"
        ],
        "name" : "defaultHotkeys",
        "doc" : "Table containing a sample set of hotkeys that can be\nassigned to the different operations. These are not bound\nby default - if you want to use them you have to call:\n`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`\nafter loading the spoon. Value:\n```\n {\n    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },\n    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },\n    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },\n    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },\n    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },\n    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },\n    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },\n    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },\n    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },\n    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },\n }",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "Table containing a sample set of hotkeys that can be",
        "parameters" : [

        ]
      },
      {
        "def" : "WindowHalfsAndThirds.use_frame_correctness",
        "stripped_doc" : [
          "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`"
        ],
        "name" : "use_frame_correctness",
        "doc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.use_frame_correctness",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Simple window movement and resizing, focusing on half- and third-of-screen sizes",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "items" : [
      {
        "def" : "WindowHalfsAndThirds.defaultHotkeys",
        "stripped_doc" : [
          "Table containing a sample set of hotkeys that can be",
          "assigned to the different operations. These are not bound",
          "by default - if you want to use them you have to call:",
          "`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`",
          "after loading the spoon. Value:",
          "```",
          " {",
          "    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },",
          "    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },",
          "    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },",
          "    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },",
          "    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },",
          "    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },",
          "    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },",
          "    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },",
          "    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },",
          "    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },",
          " }"
        ],
        "name" : "defaultHotkeys",
        "doc" : "Table containing a sample set of hotkeys that can be\nassigned to the different operations. These are not bound\nby default - if you want to use them you have to call:\n`spoon.WindowHalfsAndThirds:bindHotkeys(spoon.WindowHalfsAndThirds.defaultHotkeys)`\nafter loading the spoon. Value:\n```\n {\n    left_half   = { {\"ctrl\",        \"cmd\"}, \"Left\" },\n    right_half  = { {\"ctrl\",        \"cmd\"}, \"Right\" },\n    top_half    = { {\"ctrl\",        \"cmd\"}, \"Up\" },\n    bottom_half = { {\"ctrl\",        \"cmd\"}, \"Down\" },\n    third_left  = { {\"ctrl\", \"alt\"       }, \"Left\" },\n    third_right = { {\"ctrl\", \"alt\"       }, \"Right\" },\n    third_up    = { {\"ctrl\", \"alt\"       }, \"Up\" },\n    third_down  = { {\"ctrl\", \"alt\"       }, \"Down\" },\n    max_toggle  = { {\"ctrl\", \"alt\", \"cmd\"}, \"f\" },\n    max         = { {\"ctrl\", \"alt\", \"cmd\"}, \"Up\" },\n }",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "Table containing a sample set of hotkeys that can be",
        "parameters" : [

        ]
      },
      {
        "def" : "WindowHalfsAndThirds.use_frame_correctness",
        "stripped_doc" : [
          "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`"
        ],
        "name" : "use_frame_correctness",
        "doc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds.use_frame_correctness",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If `true`, set [setFrameCorrectness](http:\/\/www.hammerspoon.org\/docs\/hs.window.html#setFrameCorrectness) for some resizing operations which fail when the window extends beyonds screen boundaries. This may cause some jerkiness in the resizing, so experiment and determine if you need it. Defaults to `false`",
        "parameters" : [

        ]
      },
      {
        "def" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "stripped_doc" : [
          "Binds hotkeys for WindowHalfsAndThirds",
          ""
        ],
        "name" : "bindHotkeys",
        "doc" : "Binds hotkeys for WindowHalfsAndThirds\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen\n  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right\n  * third_up, third_down - resize to one vertical-third of the screen and move up\/down\n  * max - maximize the window\n  * max_toggle - toggle maximization\n  * screen_left, screen_right - move the window to the left\/right screen (if you have more than one monitor connected, does nothing otherwise)\n  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen\n  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for WindowHalfsAndThirds",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen",
          "  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right",
          "  * third_up, third_down - resize to one vertical-third of the screen and move up\/down",
          "  * max - maximize the window",
          "  * max_toggle - toggle maximization",
          "  * screen_left, screen_right - move the window to the left\/right screen (if you have more than one monitor connected, does nothing otherwise)",
          "  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen",
          "  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen"
        ]
      },
      {
        "def" : "WindowHalfsAndThirds:bindHotkeysToSpec(def, map)",
        "stripped_doc" : [
          "Map a number of hotkeys according to a definition table",
          "*** This function should be in a separate spoon or (preferably) in an hs.spoon module. I'm including it here for now to make the Spoon self-sufficient.",
          ""
        ],
        "name" : "bindHotkeysToSpec",
        "doc" : "Map a number of hotkeys according to a definition table\n*** This function should be in a separate spoon or (preferably) in an hs.spoon module. I'm including it here for now to make the Spoon self-sufficient.\n\nParameters:\n * def - table containing name-to-function definitions for the hotkeys supported by the Spoon. Each key is a hotkey name, and its value must be a function that will be called when the hotkey is invoked.\n * map - table containing name-to-hotkey definitions, as supported by [bindHotkeys in the Spoon API](https:\/\/github.com\/Hammerspoon\/hammerspoon\/blob\/master\/SPOONS.md#hotkeys). Not all the entries in `def` must be bound, but if any keys in `map` don't have a definition, an error will be produced.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeysToSpec(def, map)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Map a number of hotkeys according to a definition table",
        "parameters" : [
          " * def - table containing name-to-function definitions for the hotkeys supported by the Spoon. Each key is a hotkey name, and its value must be a function that will be called when the hotkey is invoked.",
          " * map - table containing name-to-hotkey definitions, as supported by [bindHotkeys in the Spoon API](https:\/\/github.com\/Hammerspoon\/hammerspoon\/blob\/master\/SPOONS.md#hotkeys). Not all the entries in `def` must be bound, but if any keys in `map` don't have a definition, an error will be produced."
        ]
      }
    ],
    "Method" : [
      {
        "def" : "WindowHalfsAndThirds:bindHotkeysToSpec(def, map)",
        "stripped_doc" : [
          "Map a number of hotkeys according to a definition table",
          "*** This function should be in a separate spoon or (preferably) in an hs.spoon module. I'm including it here for now to make the Spoon self-sufficient.",
          ""
        ],
        "name" : "bindHotkeysToSpec",
        "doc" : "Map a number of hotkeys according to a definition table\n*** This function should be in a separate spoon or (preferably) in an hs.spoon module. I'm including it here for now to make the Spoon self-sufficient.\n\nParameters:\n * def - table containing name-to-function definitions for the hotkeys supported by the Spoon. Each key is a hotkey name, and its value must be a function that will be called when the hotkey is invoked.\n * map - table containing name-to-hotkey definitions, as supported by [bindHotkeys in the Spoon API](https:\/\/github.com\/Hammerspoon\/hammerspoon\/blob\/master\/SPOONS.md#hotkeys). Not all the entries in `def` must be bound, but if any keys in `map` don't have a definition, an error will be produced.",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeysToSpec(def, map)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Map a number of hotkeys according to a definition table",
        "parameters" : [
          " * def - table containing name-to-function definitions for the hotkeys supported by the Spoon. Each key is a hotkey name, and its value must be a function that will be called when the hotkey is invoked.",
          " * map - table containing name-to-hotkey definitions, as supported by [bindHotkeys in the Spoon API](https:\/\/github.com\/Hammerspoon\/hammerspoon\/blob\/master\/SPOONS.md#hotkeys). Not all the entries in `def` must be bound, but if any keys in `map` don't have a definition, an error will be produced."
        ]
      },
      {
        "def" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "stripped_doc" : [
          "Binds hotkeys for WindowHalfsAndThirds",
          ""
        ],
        "name" : "bindHotkeys",
        "doc" : "Binds hotkeys for WindowHalfsAndThirds\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen\n  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right\n  * third_up, third_down - resize to one vertical-third of the screen and move up\/down\n  * max - maximize the window\n  * max_toggle - toggle maximization\n  * screen_left, screen_right - move the window to the left\/right screen (if you have more than one monitor connected, does nothing otherwise)\n  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen\n  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen",
        "notes" : [

        ],
        "signature" : "WindowHalfsAndThirds:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for WindowHalfsAndThirds",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * left_half, right_half, top_half, bottom_half - resize to the corresponding half of the screen",
          "  * third_left, third_right - resize to one horizontal-third of the screen and move left\/right",
          "  * third_up, third_down - resize to one vertical-third of the screen and move up\/down",
          "  * max - maximize the window",
          "  * max_toggle - toggle maximization",
          "  * screen_left, screen_right - move the window to the left\/right screen (if you have more than one monitor connected, does nothing otherwise)",
          "  * top_third, middle_third_v, bottom_third - resize and move the window to the corresponding vertical third of the screen",
          "  * left_third, middle_third_h, right_third - resize and move the window to the corresponding horizontal third of the screen"
        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "doc" : "Simple window movement and resizing, focusing on half- and third-of-screen sizes\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowHalfsAndThirds.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowHalfsAndThirds.spoon.zip)",
    "name" : "WindowHalfsAndThirds"
  }
]

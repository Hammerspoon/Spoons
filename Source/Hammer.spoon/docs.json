[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "stripped_doc" : [
          "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes"
        ],
        "def" : "Hammer.auto_reload_config",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer.auto_reload_config",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "name" : "auto_reload_config"
      },
      {
        "doc" : "If true, install the `hs` command line tool",
        "stripped_doc" : [
          "If true, install the `hs` command line tool"
        ],
        "def" : "Hammer.install_cli",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer.install_cli",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If true, install the `hs` command line tool",
        "name" : "install_cli"
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Automate some Hammerspoon configuration tasks",
    "type" : "Module",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "items" : [
      {
        "doc" : "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "stripped_doc" : [
          "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes"
        ],
        "def" : "Hammer.auto_reload_config",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer.auto_reload_config",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "name" : "auto_reload_config"
      },
      {
        "doc" : "If true, install the `hs` command line tool",
        "stripped_doc" : [
          "If true, install the `hs` command line tool"
        ],
        "def" : "Hammer.install_cli",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer.install_cli",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If true, install the `hs` command line tool",
        "name" : "install_cli"
      },
      {
        "doc" : "Reload config only if any of the Lua files in `files` have changed",
        "stripped_doc" : [
          "Reload config only if any of the Lua files in `files` have changed"
        ],
        "def" : "Hammer:autoReloadConfig(files)",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:autoReloadConfig(files)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Reload config only if any of the Lua files in `files` have changed",
        "name" : "autoReloadConfig"
      },
      {
        "doc" : "Binds hotkeys for Hammer\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * config_reload - Manually trigger a config reload",
        "stripped_doc" : [
          "Binds hotkeys for Hammer",
          ""
        ],
        "def" : "Hammer:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * config_reload - Manually trigger a config reload"
        ],
        "notes" : [

        ],
        "signature" : "Hammer:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for Hammer",
        "name" : "bindHotkeys"
      },
      {
        "doc" : "Manually reload configuration (wrapper around `hs.reload`)",
        "stripped_doc" : [
          "Manually reload configuration (wrapper around `hs.reload`)"
        ],
        "def" : "Hammer:reloadConfig()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:reloadConfig()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Manually reload configuration (wrapper around `hs.reload`)",
        "name" : "reloadConfig"
      },
      {
        "doc" : "Start the Spoon. At the moment this includes:\n * Set up the file watcher for auto-config-reload",
        "stripped_doc" : [
          "Start the Spoon. At the moment this includes:",
          " * Set up the file watcher for auto-config-reload"
        ],
        "def" : "Hammer:start()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:start()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Start the Spoon. At the moment this includes:",
        "name" : "start"
      }
    ],
    "Method" : [
      {
        "doc" : "Manually reload configuration (wrapper around `hs.reload`)",
        "stripped_doc" : [
          "Manually reload configuration (wrapper around `hs.reload`)"
        ],
        "def" : "Hammer:reloadConfig()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:reloadConfig()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Manually reload configuration (wrapper around `hs.reload`)",
        "name" : "reloadConfig"
      },
      {
        "doc" : "Reload config only if any of the Lua files in `files` have changed",
        "stripped_doc" : [
          "Reload config only if any of the Lua files in `files` have changed"
        ],
        "def" : "Hammer:autoReloadConfig(files)",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:autoReloadConfig(files)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Reload config only if any of the Lua files in `files` have changed",
        "name" : "autoReloadConfig"
      },
      {
        "doc" : "Binds hotkeys for Hammer\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * config_reload - Manually trigger a config reload",
        "stripped_doc" : [
          "Binds hotkeys for Hammer",
          ""
        ],
        "def" : "Hammer:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * config_reload - Manually trigger a config reload"
        ],
        "notes" : [

        ],
        "signature" : "Hammer:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for Hammer",
        "name" : "bindHotkeys"
      },
      {
        "doc" : "Start the Spoon. At the moment this includes:\n * Set up the file watcher for auto-config-reload",
        "stripped_doc" : [
          "Start the Spoon. At the moment this includes:",
          " * Set up the file watcher for auto-config-reload"
        ],
        "def" : "Hammer:start()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "Hammer:start()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Start the Spoon. At the moment this includes:",
        "name" : "start"
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "doc" : "Automate some Hammerspoon configuration tasks\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/Hammer.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/Hammer.spoon.zip)",
    "name" : "Hammer"
  }
]
